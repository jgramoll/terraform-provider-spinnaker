# This is an example goreleaser.yaml file with some sane defaults.
# Make sure to check the documentation at http://goreleaser.com
before:
  hooks:
    # you may remove this if you don't use vgo
    - go mod download
    # you may remove this if you don't need go generate
    - go generate ./...
builds:
  - env:
      - CGO_ENABLED=0
archive:
  name_template: "{{ .Binary }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}{{ if .Arm }}v{{ .Arm }}{{ end }}"

  replacements:
    darwin: Darwin
    linux: Linux
    windows: Windows
    386: i386
    amd64: x86_64

  # Archive format. Valid options are `tar.gz`, `gz`, `zip` and `binary`.
  format: binary

  # Additional files/globs to add to the archive.
  files:
    - LICENSE*
    - README*
    - CHANGELOG*
checksum:
  name_template: "checksums.txt"
snapshot:
  name_template: "{{ .Tag }}-next"
changelog:
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
brew:
  # Default to project name
  # name: terraform-provider-spinnaker

  # Repository to push the tap to.
  github:
    owner: user
    name: homebrew-tap
  # Template for the url.
  # Default is "https://github.com/<repo_owner>/<repo_name>/releases/download/{{ .Tag }}/{{ .ArtifactName }}"
  # url_template: "http://github.mycompany.com/foo/bar/releases/{{ .Tag }}/{{ .ArtifactName }}"
  # Allows you to set a custom download strategy.
  # Default is empty.
  # download_strategy: GitHubPrivateRepositoryReleaseDownloadStrategy
  # Allows you to add a custom require_relative at the top of the formula template
  # Default is empty
  # custom_require: custom_download_strategy
  # Git author used to commit to the repository.
  # Defaults are shown.
  # commit_author:
  #   name: goreleaserbot
  #   email: goreleaser@carlosbecker.com
  # Folder inside the repository to put the formula.
  # Default is the root folder.
  # folder: Formula
  # Caveats for the user of your binary.
  # Default is empty.
  # caveats: "How to use this binary"
  # Your app's homepage.
  # Default is empty.
  # homepage: "https://example.com/"
  # Your app's description.
  # Default is empty.
  # description: "Software to create fast and easy drum rolls."
  # Setting this will prevent goreleaser to actually try to commit the updated
  # formula - instead, the formula file will be stored on the dist folder only,
  # leaving the responsibility of publishing it to the user.
  # If set to auto, the release will not be uploaded to the homebrew tap
  # in case there is an indicator for prerelease in the tag e.g. v1.0.0-rc1
  # Default is false.
  # skip_upload: true
  # Custom block for brew.
  # Can be used to specify alternate downloads for devel or head releases.
  # Default is empty.
  # custom_block: |
  #   head "https://github.com/some/package.git"
  # Packages your package depends on.
  # dependencies:
  #   - git
  #   - zsh
  # Packages that conflict with your package.
  # conflicts:
  #   - svn
  #   - bash
  # Specify for packages that run as a service.
  # Default is empty.
  # plist: |
  #   <?xml version="1.0" encoding="UTF-8"?>
  # So you can `brew test` your formula.
  # Default is empty.
  # test: |
  #   system "#{bin}/program --version"
  # Custom install script for brew.
  # Default is 'bin.install "program"'.
  # install: |
  #   bin.install "program"
